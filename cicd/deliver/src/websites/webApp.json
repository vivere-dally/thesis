[
  {
    // Suffix added to the resource group name
    "Suffix": "api",

    // Properties needed when creating an application service
    "Property": {
      "AlwaysOn": true,
      "HttpsOnly": true,
      "MinTlsVersion": "1.2",
      "FtpsState": "Disabled",
      "Use32BitWorkerProcess": false,
      "Http20Enabled": true,
      "WebSocketsEnabled": true
    },

    // Docker Compose properties
    "DockerCompose": {
      // Relative path to the docker compose used by this application service
      "Path": "./../.resx/docker/docker-compose_api.yml",

      // Because of the fact that Azure does not support environment variables placeholders, neither a .env config file we need to upload
      // a good-to-go docker-compose. To achieve this, we replace all placeholders that respect the convention: ${name}
      "Placeholders": [
        {
          "Name": "${__dc__SERVER_IMAGE}",
          "Value": null,
          "Expression": "\"${ACRUsername}.azurecr.io/${BranchName}/server:${Tag}\""
        },
        {
          "Name": "${__dc__SERVER_PORT}",
          "Value": "5000",
          "Expression": null
        },
        {
          "Name": "${__dc__MYSQL_USERNAME}",
          "Value": null,
          "Expression": "\"${MySqlUsername}@$($MySqlServer.Name)\""
        },
        {
          "Name": "${__dc__MYSQL_PASSWORD}",
          "Value": null,
          "Expression": "$MySqlPassword"
        },
        {
          "Name": "${__dc__MYSQL_CONN_STR}",
          "Value": null,
          "Expression": "\"jdbc:mysql://$($MySqlServer.Name).mysql.database.azure.com:3306/thesis?useSSL=true&requireSSL=false&serverTimezone=UTC\""
        }
      ],

      "EnableCD": true
    },

    // Application settings used by our application
    "AppSettings": [
      {
        "Name": "WEBSITE_HTTPLOGGING_RETENTION_DAYS",
        "Value": "1",
        "Expression": null
      },
      {
        "Name": "SECURITY_KEY",
        "Value": null,
        "Expression": "[System.Convert]::ToBase64String(([System.Security.Cryptography.HMACSHA512]::new().Key))"
      },
      {
        "Name": "SECURITY_REQUIRED_AUTHORIZATION_HEADER",
        "Value": "Authorization",
        "Expression": null
      },
      {
        "Name": "SECURITY_ACCESS_TOKEN_TYPE_HEADER_NAME",
        "Value": "tokenType",
        "Expression": null
      },
      {
        "Name": "SECURITY_ACCESS_TOKEN_TYPE_HEADER_VALUE",
        "Value": "Bearer",
        "Expression": null
      },
      {
        "Name": "SECURITY_ACCESS_TOKEN_HEADER_NAME",
        "Value": "accessToken",
        "Expression": null
      },
      {
        "Name": "SECURITY_ACCESS_TOKEN_TTL_MILLIS",
        "Value": "300000",
        "Expression": null
      },
      {
        "Name": "SECURITY_REFRESH_TOKEN_HEADER_NAME",
        "Value": "refreshToken",
        "Expression": null
      },
      {
        "Name": "SECURITY_REFRESH_TOKEN_TTL_MILLIS",
        "Value": "900000",
        "Expression": null
      },
      {
        "Name": "SECURITY_CORS_ALLOWED_ORIGINS",
        "Value": null,
        "Expression": "\"https://$($ResourceGroup.ResourceGroupName).azurewebsites.net\""
      }
    ],

    // Connection strings used by our application
    "ConnectionStrings": [],

    // Storage Paths used by the containers
    "AzureStoragePath": []
  },
  {
    // Suffix added to the resource group name
    "Suffix": "",

    // Properties needed when creating an application service
    "Property": {
      "AlwaysOn": true,
      "HttpsOnly": true,
      "MinTlsVersion": "1.2",
      "FtpsState": "Disabled",
      "Use32BitWorkerProcess": false,
      "Http20Enabled": true,
      "WebSocketsEnabled": true
    },

    // Docker Compose properties
    "DockerCompose": {
      // Relative path to the docker compose used by this application service
      "Path": "./../.resx/docker/docker-compose_.yml",

      // Because of the fact that Azure does not support environment variables placeholders, neither a .env config file we need to upload
      // a good-to-go docker-compose. To achieve this, we replace all placeholders that respect the convention: ${name}
      "Placeholders": [
        {
          "Name": "${__dc__CLIENT_IMAGE}",
          "Value": null,
          "Expression": "\"${ACRUsername}.azurecr.io/${BranchName}/client:${Tag}\""
        },
        {
          "Name": "${__dc__CLIENT_PORT}",
          "Value": "5000",
          "Expression": null
        }
      ],

      "EnableCD": true
    },

    // Application settings used by our application
    "AppSettings": [
      {
        "Name": "WEBSITE_HTTPLOGGING_RETENTION_DAYS",
        "Value": "1",
        "Expression": null
      }
    ],

    // Connection strings used by our application
    "ConnectionStrings": [],

    // Storage Paths used by the containers
    "AzureStoragePath": []
  }
]
