[
  {
    // Suffix added to the resource group name
    "Suffix": "api",

    // Properties needed when creating an application service
    "Property": {
      "AlwaysOn": true,
      "HttpsOnly": true,
      "MinTlsVersion": "1.2",
      "FtpsState": "Disabled",
      "Use32BitWorkerProcess": false,
      "Http20Enabled": true,
      "WebSocketsEnabled": true
    },

    // Docker Compose properties
    "DockerCompose": {
      // Relative path to the docker compose used by this application service
      "Path": "./../.resx/be/docker-compose.yml",

      // Because of the fact that Azure does not support environment variables placeholders, neither a .env config file we need to upload
      // a good-to-go docker-compose. To achieve this, we replace all placeholders that respect the convention: ${name}
      "Placeholders": [
        {
          "Name": "${__dc__IMAGE}",
          "Value": null,
          "Expression": "\"${ACRUsername}.azurecr.io/${BranchName}/thesisapi:${Tag}\""
        },
        {
          "Name": "${__dc__MY_SQL_VOLUME}",
          "Value": "MySQLVolume",
          "Expression": null
        },
        {
          "Name": "${__dc__SERVER_PORT}",
          "Value": "5000",
          "Expression": null
        },
        {
          "Name": "${__dc__MYSQL_USERNAME}",
          "Value": null,
          "Expression": "\"${MySqlUsername}@$($MySqlServer.Name)\""
        },
        {
          "Name": "${__dc__MYSQL_PASSWORD}",
          "Value": null,
          "Expression": "$MySqlPassword"
        },
        {
          "Name": "${__dc__MYSQL_CONN_STR}",
          "Value": null,
          "Expression": "\"jdbc:mysql://$($MySqlServer.Name).mysql.database.azure.com:3306/thesis?useSSL=true\""
        }
      ],

      "EnableCD": true
    },

    // Application settings used by our application
    "AppSettings": [
      {
        "Name": "WEBSITE_HTTPLOGGING_RETENTION_DAYS",
        "Value": "1",
        "Expression": null
      }
    ],

    // Connection strings used by our application
    "ConnectionStrings": [],

    // Storage Paths used by the containers
    "AzureStoragePath": [
      {
        "Name": "MySQLVolume",

        //! Defined in storageAccount.json
        "ShareName": "api-my-sql",
        "MountPath": "/var/lib/bsmyapp/mysql"
      }
    ]
  },
  {
    // Suffix added to the resource group name
    "Suffix": "",

    // Properties needed when creating an application service
    "Property": {
      "AlwaysOn": true,
      "HttpsOnly": true,
      "MinTlsVersion": "1.2",
      "FtpsState": "Disabled",
      "Use32BitWorkerProcess": false,
      "Http20Enabled": true,
      "WebSocketsEnabled": true
    },

    // Docker Compose properties
    "DockerCompose": {
      // Relative path to the docker compose used by this application service
      "Path": "./../.resx/fe/docker-compose.yml",

      // Because of the fact that Azure does not support environment variables placeholders, neither a .env config file we need to upload
      // a good-to-go docker-compose. To achieve this, we replace all placeholders that respect the convention: ${name}
      "Placeholders": [
        {
          "Name": "${__dc__IMAGE}",
          "Value": null,
          "Expression": "\"${ACRUsername}.azurecr.io/${BranchName}/thesis:${Tag}\""
        },
        {
          "Name": "${__dc__VOLUME}",
          "Value": null,
          "Expression": "\"$($ResourceGroup.ResourceGroupName)$($WAConfig.Suffix)$($WAConfig.AzureStoragePath.Suffix)\""
        },
        {
          "Name": "${__dc__CLIENT_PORT}",
          "Value": "5000",
          "Expression": null
        }
      ],

      "EnableCD": true
    },

    // Application settings used by our application
    "AppSettings": [
      {
        "Name": "WEBSITE_HTTPLOGGING_RETENTION_DAYS",
        "Value": "1",
        "Expression": null
      },
      {
        "Name": "WEB_API_URL",
        "Value": null,
        "Expression": "\"https://$($ResourceGroup.ResourceGroupName)api.azurewebsites.net/api\""
      },
      {
        "Name": "WEB_API_WS_URL",
        "Value": null,
        "Expression": "\"wss://$($ResourceGroup.ResourceGroupName)api.azurewebsites.net/api\""
      }
    ],

    // Connection strings used by our application
    "ConnectionStrings": [],

    // Storage Paths used by the containers
    "AzureStoragePath": []
  }
]
